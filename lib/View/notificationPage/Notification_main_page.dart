import 'package:cloud_firestore/cloud_firestore.dart';import 'package:flutter/cupertino.dart';import 'package:flutter/material.dart';import 'package:flutter_svg/svg.dart';import 'package:get/get.dart';import 'package:loading_animation_widget/loading_animation_widget.dart';import 'package:notificationsystem_mobile/controler/method.dart';import '../../controler/auth/Account.dart';import '../../help/Colors.dart';import '../../help/text_style.dart';import '../News_page/Divider.dart';import '../Widgetpage/RefreshIcon2.dart';import 'News_Notification_Card.dart';import 'Schedules_Notification_Card.dart';// Function to get data from Firestore and listen for changes// Usage exampleclass Notification_main_page extends StatefulWidget {  @override  State<Notification_main_page> createState() => _Notification_main_pageState();}class _Notification_main_pageState extends State<Notification_main_page> {  RxBool toggle_color = false.obs;  RxDouble offset1 = 0.0.obs;  RxBool toggle_offset = false.obs;  RxString realtime = "".obs;   Color color = Colors.white;  Color color1 = Colors.white;  final ScrollController _controller = ScrollController();  @override  void initState() {    toggle_color.value=true;    _controller.addListener(() {      print(_controller.offset);      print("toggle_offset ${toggle_offset}");      if(_controller.offset> 50){        toggle_offset.value=true;        print("toggle_offset ${toggle_offset}");      }else{        toggle_offset.value=false;        print("toggle_offset ${toggle_offset}");      }    });    // TODO: implement initState    super.initState();  }  @override  Widget build(BuildContext context) {    return Padding(      padding: const EdgeInsets.all(8.0),      child: Stack(        children: [          Column(            children: [              Row(                mainAxisAlignment: MainAxisAlignment.center,                children: [                  Text(                    " المرحلة ${Account.stage}",                    style: Text_Style.getstyle(                      fontWeight: FontWeight.w500,                      ColorText: Colorsapp.mainColor,                      fontsize: MediaQuery                          .of(context)                          .size                          .width / 15,                    ),                  ),                  Text(                    " اشعارات",                    style: Text_Style.getstyle(                      fontWeight: FontWeight.w500,                      ColorText: Colorsapp.mainColor,                      fontsize: MediaQuery                          .of(context)                          .size                          .width / 15,                    ),                  ),                ],              ),              MyDivider1(                width: MediaQuery                    .of(context)                    .size                    .width / 1.1,                height: 3,              ),              const SizedBox(                height: 10,              ),              toggle_color.value==true? StreamBuilder<QuerySnapshot>(                stream: Methods.getNews2(),                builder: (BuildContext context, AsyncSnapshot<QuerySnapshot> snapshot) {                  if (snapshot.hasError) {                    return Column(                      children: [                        Container(                            width: MediaQuery                                .of(context)                                .size                                .width / 1.2,                            height: MediaQuery                                .of(context)                                .size                                .height / 2,                            child: SvgPicture.asset(                              "photo/No data-cuate2.svg",                            )),                        Text(                          "هناك خطأ",                          style: Text_Style.getstyle(                            fontWeight: FontWeight.w700,                            ColorText: Colorsapp.mainColor,                            fontsize:                            MediaQuery                                .of(context)                                .size                                .width / 15,                          ),                        ),                      ],                    );                  }                  if (snapshot.connectionState == ConnectionState.waiting) {                    return Padding(                      padding: EdgeInsets.only(                          top: MediaQuery                              .of(context)                              .size                              .height / 2.8),                      child: Center(                        child: LoadingAnimationWidget.flickr(                          size: 100,                          leftDotColor: Colorsapp.mainColor,                          rightDotColor: Colorsapp.SecondColor,                          //color: Colorsapp.mainColor,                        ),                      ),                    );                  }                  if(snapshot.data?.size==0){                    print("-------------------qq-size------${snapshot.data?.size}-----------------");                    return Column(                      children: [                        Container(                            width: MediaQuery                                .of(context)                                .size                                .width / 1.2,                            height: MediaQuery                                .of(context)                                .size                                .height / 2,                            child: SvgPicture.asset(                              "photo/No data-cuate2.svg",                            )),                        Text(                          "لا يوجد اشعارات",                          style: Text_Style.getstyle(                            fontWeight: FontWeight.w700,                            ColorText: Colorsapp.mainColor,                            fontsize:                            MediaQuery                                .of(context)                                .size                                .width / 15,                          ),                        ),                      ],                    );                  print(snapshot.data?.size);                  }else{                    print("--------------------sizeqqq-----------------------");                    print(snapshot.data?.size);                  }                  // Display the data                  return Expanded(                    child: ListView(                      controller: _controller,                      children: snapshot.data!.docs.map<Widget>((DocumentSnapshot document) {                        Map<String, dynamic> data = document.data()! as Map<String, dynamic>;                        print("Realtime <<<<${Methods.getRealTimeDifference(oldTime: "${data['realtime']}".substring(0,data['realtime'].length-2)).toString()}");                        final mainString = Methods.getRealTimeDifference(oldTime: "${data['realtime']}".substring(0,data['realtime'].length-2)).toString();                        if (mainString.contains("ثانية")) {                          print('44444444444444444444444444444');                          color = Colorsapp.SecondColor.withOpacity(0.2);                        }                        else if (mainString.contains("دقيقة"))  {                          print('8888888888888888888888888');                          color = Colorsapp.TextColor.withOpacity(0.8);                        }                        else if (mainString.contains("ساعة"))  {                          print('*************************');                          color = Colorsapp.Container_post;                        }                        else if (mainString.contains("يوم"))  {                          print('/////////////////////////');                          color = Colors.white;                        }                        return                          News_Notification_Card(data: data,                          time: "${Methods.getRealTimeDifference(oldTime: "${data['realtime']}".substring(0,data['realtime'].length-2)).toString()}",                          author: "${data['author']}".substring(0,(data['author'].length>25)?25:data['author'].length),                          title: "${data['Title']}".substring(0,(data['Title'].length>100)?100:data['Title'].length),                          stage: " المرحلة${Account.stage}",                            color: color,);                      }).toList().reversed.toList(),                    ),                  );                },              ):StreamBuilder<QuerySnapshot>(                stream: Methods.getSchedules2(),                builder: (BuildContext context, AsyncSnapshot<QuerySnapshot> snapshot) {                  if (snapshot.hasError) {                    return Column(                      children: [                        Container(                            width: MediaQuery                                .of(context)                                .size                                .width / 1.2,                            height: MediaQuery                                .of(context)                                .size                                .height / 2,                            child: SvgPicture.asset(                              "photo/No data-cuate2.svg",                            )),                        Text(                          "هناك خطأ",                          style: Text_Style.getstyle(                            fontWeight: FontWeight.w700,                            ColorText: Colorsapp.mainColor,                            fontsize:                            MediaQuery                                .of(context)                                .size                                .width / 15,                          ),                        ),                      ],                    );                  }                  if (snapshot.connectionState == ConnectionState.waiting) {                    print("---------------------------------------------------------------------------");                    print(snapshot.data!.size);                    return Padding(                      padding: EdgeInsets.only(                          top: MediaQuery                              .of(context)                              .size                              .height / 2.8),                      child: Center(                        child: LoadingAnimationWidget.flickr(                          size: 100,                          leftDotColor: Colorsapp.mainColor,                          rightDotColor: Colorsapp.SecondColor,                          //color: Colorsapp.mainColor,                        ),                      ),                    );                  }                  if(snapshot.data?.size==0){                    print("-------------------qq-size------${snapshot.data?.size}-----------------");                    return Column(                      children: [                        Container(                            width: MediaQuery                                .of(context)                                .size                                .width / 1.2,                            height: MediaQuery                                .of(context)                                .size                                .height / 2,                            child: SvgPicture.asset(                              "photo/No data-cuate2.svg",                            )),                        Text(                          "لا يوجد اشعارات",                          style: Text_Style.getstyle(                            fontWeight: FontWeight.w700,                            ColorText: Colorsapp.mainColor,                            fontsize:                            MediaQuery                                .of(context)                                .size                                .width / 15,                          ),                        ),                      ],                    );                    print(snapshot.data?.size);                  }else{                    print("--------------------sizeqqq-----------------------");                    print(snapshot.data?.size);                  }                  // Display the data                  return Expanded(                    child: ListView(                      controller: _controller,                      children: snapshot.data!.docs.map<Widget>((DocumentSnapshot document) {                        Map<String, dynamic> data1 = document.data()! as Map<String, dynamic>;                        final mainString = Methods.getRealTimeDifference(oldTime: "${data1['realtime']}".substring(0,data1['realtime'].length-2)).toString();                        if (mainString.contains("ثانية")) {                          print('44444444444444444444444444444');                          color1 = Colorsapp.SecondColor.withOpacity(0.2);                        }                        else if (mainString.contains("دقيقة"))  {                          print('8888888888888888888888888');                          color1 = Colorsapp.TextColor.withOpacity(0.8);                        }                        else if (mainString.contains("ساعة"))  {                          print('*************************');                          color1 = Colorsapp.Container_post;                        }                        else if (mainString.contains("يوم"))  {                          print('/////////////////////////');                          color1 = Colors.white;                        }                        return                          Schedules_Notification_Card(data: data1,                            time: "${Methods.getRealTimeDifference(oldTime: "${data1['realtime']}".substring(0,data1['realtime'].length-2)).toString()}",                            author: "${data1['author']}".substring(0,(data1['author'].length>25)?25:data1['author'].length),                            title: "${data1['type']}",                            stage: " المرحلة${Account.stage}",                            color: color1,);                      }).toList().reversed.toList(),                    ),                  );                },              )            ],          ),          Obx(             () {              return  toggle_offset.value==false?Align(                      alignment: Alignment.bottomCenter,                      child: AnimatedContainer(                        decoration: BoxDecoration(                            borderRadius: BorderRadius.circular(10)                        ),                        height: 50,                        duration: Duration(seconds: 2),                        child: Row(                          mainAxisAlignment: MainAxisAlignment.spaceAround,                          children: [                            Expanded(                              child: Padding(                                padding: const EdgeInsets.only(right: 3),                                child: ElevatedButton(                                    style: ElevatedButton.styleFrom(                                        backgroundColor: toggle_color.value==false?Colorsapp.SecondColor.withOpacity(0.5):Colorsapp.TextColor.withOpacity(0.5),                                      shape: RoundedRectangleBorder(                                        borderRadius: BorderRadius.circular(10.0), // Set the border radius here                                      ),                                    ),                                    onPressed: (){                                      setState(() {                                      });                                      if(toggle_color.value==false){                                        toggle_color.value=false;                                      }else if(toggle_color.value==true){                                        toggle_color.value=false;                                      }                                      //toggle_color.value = !toggle_color.value;                                    }, child: Center(child: Text(                                  "الجداول",                                  style: Text_Style.getstyle(                                    fontWeight: FontWeight.w700,                                    ColorText: Colorsapp.mainColor,                                    fontsize: MediaQuery                                        .of(context)                                        .size                                        .width / 20,                                  ),                                )),                                ),                              ),                            ),                            Expanded(child: Padding(                              padding: const EdgeInsets.only(left: 3),                              child: ElevatedButton(                                style: ElevatedButton.styleFrom(                                  backgroundColor: toggle_color.value==false?Colorsapp.TextColor.withOpacity(0.5):Colorsapp.SecondColor.withOpacity(0.5),                                  shape: RoundedRectangleBorder(                                    borderRadius: BorderRadius.circular(10.0), // Set the border radius here                                  ),                                ),                                onPressed: (){                                  setState(() {                                  });                                  if(toggle_color.value==true){                                    toggle_color.value=true;                                  }else if(toggle_color.value==false){                                    toggle_color.value=true;                                  }                                }, child:    Center(                                child: Text(                                  "الاخبار",                                  style: Text_Style.getstyle(                                    fontWeight: FontWeight.w700,                                    ColorText: Colorsapp.mainColor,                                    fontsize: MediaQuery                                        .of(context)                                        .size                                        .width / 20,                                  ),                                ),                              ),                              ),                            )),                          ],                        ),                      )                  ):Container();            }          ),        ],      ),    );  }}