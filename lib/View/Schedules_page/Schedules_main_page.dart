import 'package:cloud_firestore/cloud_firestore.dart';import 'package:flutter/cupertino.dart';import 'package:flutter/material.dart';import 'package:flutter_svg/svg.dart';import 'package:get/get_rx/src/rx_types/rx_types.dart';import 'package:get/get_state_manager/src/rx_flutter/rx_obx_widget.dart';import 'package:link_text/link_text.dart';import 'package:loading_animation_widget/loading_animation_widget.dart';import 'package:notificationsystem_mobile/controler/method.dart';import 'package:notificationsystem_mobile/controler/model.dart';import 'package:photo_view/photo_view.dart';import 'package:url_launcher/url_launcher.dart';import '../../help/Colors.dart';import '../../help/text_style.dart';import '../News_page/Divider.dart';class Schedules_main_page extends StatefulWidget {  const Schedules_main_page({Key? key}) : super(key: key);  @override  State<Schedules_main_page> createState() => _Schedules_main_pageState();}class _Schedules_main_pageState extends State<Schedules_main_page> {  @override  void initState() {    super.initState();    Methods.Schedules_post.value = false;    Methods.getSchedules();    print("/////////////////////object/////////////////////");    // TODO: implement initState Methods.getNews1();  }  RxBool openImage = false.obs;  RxString imageurl = "".obs;  Uri? _url;  @override  Widget build(BuildContext context) {    return Padding(      padding: const EdgeInsets.all(8.0),      child: Center(        child: Column(          mainAxisAlignment: MainAxisAlignment.start,          children: [            Row(              mainAxisAlignment: MainAxisAlignment.spaceAround,              children: [                Text(                  "MTCE",                  style: Text_Style.getstyle(                    fontWeight: FontWeight.w500,                    ColorText: Colorsapp.mainColor,                    fontsize: MediaQuery.of(context).size.width / 15,                  ),                ),                Text(                  " جدول المرحلة ${Methods.Stagesfield}",                  style: Text_Style.getstyle(                    fontWeight: FontWeight.w500,                    ColorText: Colorsapp.mainColor,                    fontsize: MediaQuery.of(context).size.width / 15,                  ),                ),              ],            ),            MyDivider1(              width: MediaQuery.of(context).size.width / 1.1,              height: 3,            ),            SizedBox(              height: 10,            ),            Obx(                    () {                  return openImage.value ==false? Obx(() {                    return Methods.Schedules_post.value == true                        ? Obx(() {                      return Methods.Schedules_List.value.isNotEmpty                          ? Expanded(                        child: ListView.builder(                            reverse: false,                            itemCount: Methods.Schedules_List.length,                            itemBuilder:                                (BuildContext context, int newsIndex) {                              return Padding(                                padding: const EdgeInsets.symmetric(                                    vertical: 5),                                child: Container(                                  width:                                  MediaQuery.of(context).size.width /                                      1.1,                                  //height: 500,                                  decoration: BoxDecoration(                                      borderRadius:                                      BorderRadius.circular(10),                                      color: Colorsapp.TextColor),                                  child: Column(                                    children: [                                      Container(                                        height: MediaQuery.of(context)                                            .size                                            .height /                                            20,                                        padding: EdgeInsets.all(5),                                        decoration: BoxDecoration(                                            borderRadius:                                            BorderRadius.circular(10),                                            border: Border.all(                                                color:                                                Colorsapp.mainColor,                                                width: 2),                                            color: Colorsapp.White),                                        child: Row(                                          mainAxisAlignment:                                          MainAxisAlignment.end,                                          children: [                                            Expanded(                                                child: Directionality(                                                  textDirection:                                                  TextDirection.rtl,                                                  child: ListView.builder(                                                      scrollDirection:                                                      Axis.horizontal,                                                      itemCount: Methods.Schedules_List[newsIndex]["Stages"].length,                                                      itemBuilder: (BuildContext                                                      context,                                                          int StagesIndex) {                                                        return Padding(                                                          padding:                                                          const EdgeInsets                                                              .only(                                                              top: 4),                                                          child: Text(                                                            "| ${Methods.Schedules_List[newsIndex]["Stages"][StagesIndex]}",                                                            textDirection:                                                            TextDirection                                                                .ltr,                                                            style: Text_Style                                                                .getstyle(                                                              fontWeight:                                                              FontWeight                                                                  .w500,                                                              ColorText: Colorsapp                                                                  .SecondColor,                                                              fontsize: MediaQuery.of(                                                                  context)                                                                  .size                                                                  .width /                                                                  22,                                                            ),                                                          ),                                                        );                                                      }),                                                )),                                            Text(                                              " : المرحلة",                                              textDirection:                                              TextDirection.ltr,                                              style: Text_Style.getstyle(                                                fontWeight:                                                FontWeight.w700,                                                ColorText:                                                Colorsapp.mainColor,                                                fontsize:                                                MediaQuery.of(context)                                                    .size                                                    .width /                                                    20,                                              ),                                            ),                                          ],                                        ),                                      ),                                      Padding(                                        padding:                                        const EdgeInsets.all(8.0),                                        child: Align(                                            alignment:                                            Alignment.centerRight,                                            child: Text(                                              "${Methods.Schedules_List[newsIndex]["Title"].toString()}",                                              textDirection:                                              TextDirection.rtl,                                              style: Text_Style.getstyle(                                                fontWeight:                                                FontWeight.w600,                                                ColorText:                                                Colorsapp.redColor,                                                fontsize:                                                MediaQuery.of(context)                                                    .size                                                    .width /                                                    20,                                              ),                                            )),                                      ),                                      if (Methods.Schedules_List[newsIndex]["Images"].isNotEmpty)                                        Container(                                            width: MediaQuery.of(context).size.width,                                            height: 300,                                            child: Directionality(                                                textDirection:                                                TextDirection.rtl,                                                child: ListView.builder(                                                  itemCount: Methods.Schedules_List[newsIndex]["Images"].length,                                                  scrollDirection: Axis.horizontal,                                                  itemBuilder: (BuildContextcontext, int index2) {                                                    return Padding(                                                      padding:                                                      const EdgeInsets.all(5.0),                                                      child: Container(                                                          decoration: BoxDecoration(                                                              color: Colors                                                                  .white,                                                              borderRadius:                                                              BorderRadius.circular(                                                                  10),                                                              border: Border.all(                                                                  color: Colorsapp                                                                      .mainColor,                                                                  width:                                                                  2)),                                                          child:                                                          GestureDetector(                                                            onTap: (){                                                              print("${Methods.Schedules_List[newsIndex]["Images"][index2].toString()}");                                                              openImage.value=true;                                                              imageurl.value ="${Methods.Schedules_List[newsIndex]["Images"][index2].toString()}";                                                            },                                                            child: ClipRRect(                                                                borderRadius:                                                                BorderRadius.circular(                                                                    10),                                                                child: Image                                                                    .network(                                                                  Methods.Schedules_List[newsIndex]["Images"][index2].toString(),                                                                  fit: BoxFit                                                                      .contain,                                                                )),                                                          )),                                                    );                                                  },                                                ))),                                      Padding(                                        padding:                                        const EdgeInsets.all(8.0),                                        child: Align(                                            alignment:                                            Alignment.centerRight,                                            child: Text(                                              Methods.Schedules_List[newsIndex]["body"].toString(),                                              textDirection:                                              TextDirection.rtl,                                              style: Text_Style.getstyle(                                                fontWeight:                                                FontWeight.w500,                                                ColorText:                                                Colorsapp.mainColor,                                                fontsize:                                                MediaQuery.of(context)                                                    .size                                                    .width /                                                    25,                                              ),                                            )),                                      ),                                      if (Methods.Schedules_List[newsIndex]["Link"].isNotEmpty)                                        Container(                                          color: Colors.red,                                          width: MediaQuery.of(context)                                              .size                                              .width,                                          child: TextButton(                                            child: Text(                                              Methods.Schedules_List[newsIndex]["Link"].toString(),                                              style: TextStyle(                                                color: Colors.blue,                                                decoration:                                                TextDecoration                                                    .underline,                                                fontSize: MediaQuery.of(                                                    context)                                                    .size                                                    .width /                                                    30,                                              ),                                            ),                                            onPressed: () async {                                              _url = Uri.parse(                                                  Methods.Schedules_List[newsIndex]["Link"].toString());                                              if (!await launchUrl(                                                  _url!)) {                                                throw 'Could not launch $_url';                                              }                                            },                                          ),                                        ),                                      Align(                                          alignment:                                          Alignment.centerLeft,                                          child: Text(                                            "  ${Methods.Schedules_List[newsIndex].id.toString().substring(5)}",                                            textDirection:                                            TextDirection.ltr,                                            style: Text_Style.getstyle(                                              fontWeight:                                              FontWeight.w400,                                              ColorText:                                              Colorsapp.redColor,                                              fontsize:                                              MediaQuery.of(context).size.width / 27,                                            ),                                          )),                                      Container(                                        height: MediaQuery.of(context)                                            .size                                            .height /                                            20,                                        padding: const EdgeInsets.all(0),                                        decoration: BoxDecoration(                                            borderRadius:                                            const BorderRadius.only(                                              topRight:                                              Radius.circular(20),                                              topLeft:                                              Radius.circular(20),                                            ),                                            color: Colorsapp.White),                                        child: Row(                                          mainAxisAlignment:                                          MainAxisAlignment                                              .spaceBetween,                                          children: [                                            Row(                                              children: [                                                IconButton(                                                  icon: Obx(                                                          () {                                                        return Icon(                                                          Icons.thumb_down,                                                          color: Methods.Schedules_listdislikesflag[newsIndex] == true                                                              ? Colors.lightBlue                                                              : Colorsapp.TextColor,                                                        );                                                      }                                                  ),                                                  onPressed: () async {                                                    setState(() async {                                                      if (Methods.Schedules_listdislikesflag[newsIndex] == false) {                                                        Methods.Schedules_listdislikesflag[newsIndex] = true;                                                        await FirebaseFirestore.instance.collection('News').doc(Methods.Schedules_List[newsIndex].id)                                                            .update({'dislikes': FieldValue.increment(1)                                                        });                                                      } else {                                                        Methods.Schedules_listdislikesflag[newsIndex] = false;                                                        await FirebaseFirestore.instance.collection('News').doc(Methods.Schedules_List[newsIndex].id)                                                            .update({'dislikes': FieldValue.increment(-1)                                                        });                                                      }                                                      if (Methods.Schedules_listlikesflag[newsIndex] == true) {                                                        Methods.Schedules_listlikesflag[newsIndex] = false;                                                        await FirebaseFirestore.instance.collection('News').doc(Methods.Schedules_List[newsIndex].id)                                                            .update({'likes': FieldValue.increment(-1)                                                        });                                                      }                                                      if (Methods.Schedules_listfavoritesflag[newsIndex] == true) {                                                        Methods.Schedules_listfavoritesflag[newsIndex] = false;                                                        await FirebaseFirestore.instance.collection('News').doc(Methods.Schedules_List[newsIndex].id)                                                            .update({'favorites': FieldValue.increment(-1)                                                        });                                                      }                                                    });                                                  },                                                ),                                                IconButton(                                                  icon: Obx(                                                          () {                                                        return Icon(                                                          Icons.thumb_up,                                                          color: Methods.Schedules_listlikesflag[newsIndex] == true                                                              ? Colors.blue                                                              : Colorsapp.TextColor,                                                        );                                                      }                                                  ),                                                  onPressed: () async {                                                    setState(() async {                                                      if (Methods.Schedules_listlikesflag[newsIndex] == false) {                                                        Methods.Schedules_listlikesflag[newsIndex] = true;                                                        await FirebaseFirestore.instance.collection('News').doc(Methods.Schedules_List[newsIndex].id)                                                            .update({'likes': FieldValue.increment(1)                                                        });                                                      } else {                                                        Methods.Schedules_listlikesflag[newsIndex] = false;                                                        await FirebaseFirestore.instance.collection('News').doc(Methods.Schedules_List[newsIndex].id)                                                            .update({'likes': FieldValue.increment(-1)                                                        });                                                      }                                                      if (Methods.Schedules_listfavoritesflag[newsIndex] == true) {                                                        Methods.Schedules_listfavoritesflag[newsIndex] = false;                                                        await FirebaseFirestore.instance.collection('News').doc(Methods.Schedules_List[newsIndex].id)                                                            .update({'favorites': FieldValue.increment(-1)                                                        });                                                      }                                                      if (Methods.Schedules_listdislikesflag[newsIndex] == true) {                                                        Methods.Schedules_listdislikesflag[newsIndex] = false;                                                        await FirebaseFirestore.instance.collection('News').doc(Methods.Schedules_List[newsIndex].id)                                                            .update({'dislikes': FieldValue.increment(-1)                                                        });                                                      }                                                    });                                                  },                                                ),                                                IconButton(                                                    icon: Obx(                                                            () {                                                          return Icon(                                                            Icons.favorite,                                                            color: Methods.Schedules_listfavoritesflag[newsIndex] == true                                                                ? Colorsapp.redColor                                                                : Colorsapp.TextColor,                                                          );                                                        }                                                    ),                                                    onPressed:                                                        () async {                                                      setState(                                                              () async {                                                            if (Methods.Schedules_listdislikesflag[newsIndex] ==                                                                true) {                                                              Methods.Schedules_listdislikesflag[newsIndex] = false;                                                              await FirebaseFirestore.instance.collection('News').doc(Methods.Schedules_List[newsIndex].id).update({                                                                'dislikes': FieldValue.increment(-1)                                                              });                                                            }                                                            if (Methods.Schedules_listlikesflag[newsIndex] == true) {                                                              Methods.Schedules_listlikesflag[newsIndex] = false;                                                              await FirebaseFirestore.instance.collection('News').doc(Methods.Schedules_List[newsIndex].id)                                                                  .update({'likes': FieldValue.increment(-1)                                                              });                                                            }                                                            if (Methods.Schedules_listfavoritesflag[newsIndex] == false) {                                                              Methods.Schedules_listfavoritesflag[newsIndex] = true;                                                              await FirebaseFirestore.instance.collection('News').doc(Methods.Schedules_List[newsIndex].id)                                                                  .update({'favorites': FieldValue.increment(1)                                                              });                                                            } else {                                                              Methods.Schedules_listfavoritesflag[newsIndex] = false;                                                              await FirebaseFirestore.instance.collection('News').doc(Methods.Schedules_List[newsIndex].id)                                                                  .update({'favorites': FieldValue.increment(-1)                                                              });                                                            }                                                          });                                                    }),                                              ],                                            ),                                            Padding(                                              padding:                                              const EdgeInsets.only(                                                  right: 8, top:0),                                              child: Column(                                                mainAxisAlignment: MainAxisAlignment.center,                                                children: [                                                  Text(                                                    "${Methods.Schedules_List[newsIndex]["author"].toString().substring(0, (Methods.Schedules_List[newsIndex]["author"].toString().length > 20) ? 20 : (Methods.Schedules_List[newsIndex]["author"].toString().length))}",                                                    textDirection:                                                    TextDirection                                                        .rtl,                                                    style: Text_Style                                                        .getstyle(                                                      fontWeight:                                                      FontWeight                                                          .w600,                                                      ColorText:                                                      Colorsapp                                                          .redColor,                                                      fontsize: MediaQuery.of(                                                          context)                                                          .size                                                          .width /                                                          25,                                                    ),                                                  ),                                                ],                                              ),                                            ),                                          ],                                        ),                                      ),                                    ],                                  ),                                ),                              );                            }),                      )                          : Column(                        children: [                          SvgPicture.asset(                            "photo/No data-cuate2.svg",                          ),                          Text(                            "لا يوجد جدول",                            style: Text_Style.getstyle(                              fontWeight: FontWeight.w700,                              ColorText: Colorsapp.mainColor,                              fontsize:                              MediaQuery.of(context).size.width / 15,                            ),                          ),                        ],                      );                    })                        : Padding(                      padding: EdgeInsets.only(                          top: MediaQuery.of(context).size.height / 2.8),                      child: Center(                        child: LoadingAnimationWidget.flickr(                          size: 100,                          leftDotColor: Colorsapp.mainColor,                          rightDotColor: Colorsapp.SecondColor,                          //color: Colorsapp.mainColor,                        ),                      ),                    );                  }                  ):Container(                    width:                    MediaQuery.of(context).size.width / 1.1,                    height: MediaQuery.of(context).size.height / 1.3,                    decoration: BoxDecoration(                        color: Colorsapp.Container_post,                        borderRadius: BorderRadius.circular(20)                    ),                    child: Column(                      mainAxisAlignment: MainAxisAlignment.spaceBetween,                      children: [                        Padding(                          padding: const EdgeInsets.all(8.0),                          child: Container(                              width: MediaQuery.of(context).size.width / 1.2,                              height: MediaQuery.of(context).size.height / 2,                              child: ClipRRect(                                  borderRadius:                                  BorderRadius.circular(                                      30),                                  child: PhotoView(                                    backgroundDecoration: BoxDecoration(                                      //color: Colors.white                                    ),                                    enableRotation: false,                                    minScale: PhotoViewComputedScale.contained ,                                    maxScale: PhotoViewComputedScale.covered * 2,                                    initialScale: PhotoViewComputedScale.contained,                                    imageProvider: NetworkImage("$imageurl",),                                  )                              )),                        ),                        Container(                            child: Row(                              mainAxisAlignment: MainAxisAlignment.spaceBetween,                              children: [                                IconButton(onPressed: (){                                  openImage.value = false;                                }, icon: Icon(Icons.arrow_back_ios_new_sharp,size: 30,                                  color: Colorsapp.mainColor,                                )),                                IconButton(onPressed: () async {                                  await Methods.getHttp(url: imageurl.value);                                }, icon: Icon(Icons.download,size: 30,                                  color: Colorsapp.mainColor,                                )),                              ],                            ))                      ],                    ),                  );                }            )          ],        ),      ),    );  }}