import 'package:cached_network_image/cached_network_image.dart';import 'package:flutter/cupertino.dart';import 'package:flutter/material.dart';import 'package:get/get.dart';import 'package:get/get_core/src/get_main.dart';import '../../controler/method.dart';import '../../help/Colors.dart';import '../../help/text_style.dart';import '../home_page.dart';class ImagePage extends StatefulWidget {  final String imageUrl;  final String time;  final String title;  ImagePage({required this.imageUrl, required this.time, required this.title});  @override  _ImagePageState createState() => _ImagePageState();}class _ImagePageState extends State<ImagePage> {  bool _reverse = false;  bool _isBottomSheetOpen = false;  ScrollController? _scrollController;  bool _isAppBarCollapsed = false;  @override  void initState() {    super.initState();    _scrollController = ScrollController();    _scrollController?.addListener(_handleScroll);  }  @override  void dispose() {    _scrollController?.dispose();    super.dispose();  }  void _handleScroll() {    if (_scrollController!.offset > 100 && !_isAppBarCollapsed) {      setState(() {        _isAppBarCollapsed = true;      });    } else if (_scrollController!.offset <= 100 && _isAppBarCollapsed) {      setState(() {        _isAppBarCollapsed = false;      });    }  }  @override  Widget build(BuildContext context) {    return Scaffold(      backgroundColor: Colorsapp.Container_post,          body: SafeArea(        child: Stack(          children: [            Center(                child: GestureDetector(                  onTap: () {                    print("${_isBottomSheetOpen}");                    setState(() {                    });                    _isBottomSheetOpen=!_isBottomSheetOpen;                    print("${_isBottomSheetOpen}");                  },                  child: InteractiveViewer(                      minScale:1,                      maxScale: 5,                      child: CachedNetworkImage(                        imageUrl: widget.imageUrl,                        fit: BoxFit.contain,                        placeholder: (context, url) => Center(                          child: CircularProgressIndicator(),                        ),                        errorWidget: (context, url, error) => Icon(Icons.error),                      )),                )),            Align(                alignment: Alignment.topCenter,                child: AnimatedContainer(              decoration: BoxDecoration(                color: Colorsapp.mainColor.withOpacity(0.3),                borderRadius: BorderRadius.only(                  bottomRight: Radius.circular(10.0),                  bottomLeft: Radius.circular(10.0),                ),              ),              duration: Duration(milliseconds: 300),              height: _isBottomSheetOpen ? 50.0 : 0,              child: _isBottomSheetOpen                  ? Padding(                padding: const EdgeInsets.all(8.0),                child: Center(                  child: Row(                    mainAxisAlignment: MainAxisAlignment.spaceBetween,                    children: [                      IconButton(                          onPressed: () async {                            Get.to(HomePage(), transition: Transition.noTransition);                          }, icon: Icon(Icons.arrow_back_ios,size: 25,                        color: Colorsapp.White.withOpacity(0.7),                      )),                      Text(                        widget.title,                        textDirection:                        TextDirection.ltr,                        style: Text_Style.getstyle(                          fontWeight:                          FontWeight.w700,                          ColorText:                          Colorsapp.White.withOpacity(0.7),                          fontsize:                          MediaQuery                              .of(context)                              .size                              .width / 20,                        ),                      ),                    ],                  ),                ),              )                  : null,            )),            Align(              alignment: Alignment.bottomCenter,              child: AnimatedContainer(                decoration: BoxDecoration(                  color: Colorsapp.mainColor.withOpacity(0.3),                  borderRadius: BorderRadius.only(                    topRight: Radius.circular(10.0),                    topLeft: Radius.circular(10.0),                  ),                ),                duration: Duration(milliseconds: 300),                height: _isBottomSheetOpen ? 50.0 : 0,                child: _isBottomSheetOpen                    ? Padding(                  padding: const EdgeInsets.all(8.0),                  child: Center(                    child: Row(                      mainAxisAlignment: MainAxisAlignment.spaceBetween,                      children: [                        Text(                          widget.time,                          textDirection:                          TextDirection.ltr,                          style: Text_Style.getstyle(                            fontWeight:                            FontWeight.w400,                            ColorText:                            Colorsapp.White.withOpacity(0.7),                            fontsize:                            MediaQuery                                .of(context)                                .size                                .width / 22,                          ),                        ),                        IconButton(onPressed: () async {                          print("widget.imageUrl.toString()");                          print(widget.imageUrl.toString());                          await Methods.getHttp(url:widget.imageUrl);                        }, icon: Icon(Icons.download,size: 25,                          color: Colorsapp.White.withOpacity(0.7),                        )),                      ],                    ),                  ),                )                    : null,              ),            ),          ],        ),      ),    );  }}