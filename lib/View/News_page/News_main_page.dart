import 'package:cloud_firestore/cloud_firestore.dart';import 'package:flutter/cupertino.dart';import 'package:flutter/material.dart';import 'package:flutter_svg/svg.dart';import 'package:get/get.dart';import 'package:link_text/link_text.dart';import 'package:loading_animation_widget/loading_animation_widget.dart';import 'package:notificationsystem_mobile/controler/method.dart';import 'package:notificationsystem_mobile/controler/model.dart';import 'package:url_launcher/url_launcher.dart';import '../../help/Colors.dart';import '../../help/text_style.dart';import 'Divider.dart';class News_main_page extends StatefulWidget {  const News_main_page({Key? key}) : super(key: key);  @override  State<News_main_page> createState() => _News_main_pageState();}class _News_main_pageState extends State<News_main_page> {  @override  void initState() {    Methods.post.value = false;    Methods.getNews1();    // TODO: implement initState Methods.getNews1();  }  Uri? _url;  @override  Widget build(BuildContext context) {    return Padding(      padding: const EdgeInsets.all(8.0),      child: Center(        child: Column(          mainAxisAlignment: MainAxisAlignment.start,          children: [            Row(              mainAxisAlignment: MainAxisAlignment.spaceAround,              children: [                Text(                  "MTCE",                  style: Text_Style.getstyle(                    fontWeight: FontWeight.w500,                    ColorText: Colorsapp.mainColor,                    fontsize: MediaQuery.of(context).size.width / 15,                  ),                ),                Text(                  " اخبار المرحلة ${Methods.Stagesfield}",                  style: Text_Style.getstyle(                    fontWeight: FontWeight.w500,                    ColorText: Colorsapp.mainColor,                    fontsize: MediaQuery.of(context).size.width / 15,                  ),                ),              ],            ),            MyDivider1(              width: MediaQuery.of(context).size.width / 1.1,              height: 3,            ),            SizedBox(              height: 10,            ),            Obx(() {              return Methods.post.value == true                  ? Obx(() {                      return Methods.newsList.value.isNotEmpty                          ? Expanded(                              child: ListView.builder(                                  reverse: true,                                  itemCount: Methods.newsList.length,                                  itemBuilder:                                      (BuildContext context, int newsIndex) {                                    return Padding(                                      padding: const EdgeInsets.symmetric(                                          vertical: 5),                                      child: Container(                                        width:                                            MediaQuery.of(context).size.width /                                                1.1,                                        //height: 500,                                        decoration: BoxDecoration(                                            borderRadius:                                                BorderRadius.circular(10),                                            color: Colorsapp.TextColor),                                        child: Column(                                          children: [                                            Container(                                              height: MediaQuery.of(context)                                                      .size                                                      .height /                                                  20,                                              padding: EdgeInsets.all(5),                                              decoration: BoxDecoration(                                                  borderRadius:                                                      BorderRadius.circular(10),                                                  border: Border.all(                                                      color:                                                          Colorsapp.mainColor,                                                      width: 2),                                                  color: Colorsapp.White),                                              child: Row(                                                mainAxisAlignment:                                                    MainAxisAlignment.end,                                                children: [                                                  Expanded(                                                      child: Directionality(                                                    textDirection:                                                        TextDirection.rtl,                                                    child: ListView.builder(                                                        scrollDirection:                                                            Axis.horizontal,                                                        itemCount: Methods                                                            .newsList[newsIndex]                                                                ["Stages"]                                                            .length,                                                        itemBuilder: (BuildContext                                                                context,                                                            int StagesIndex) {                                                          return Padding(                                                            padding:                                                                const EdgeInsets                                                                        .only(                                                                    top: 2),                                                            child: Text(                                                              "| ${Methods.newsList[newsIndex]["Stages"][StagesIndex]}",                                                              textDirection:                                                                  TextDirection                                                                      .ltr,                                                              style: Text_Style                                                                  .getstyle(                                                                fontWeight:                                                                    FontWeight                                                                        .w500,                                                                ColorText: Colorsapp                                                                    .SecondColor,                                                                fontsize: MediaQuery.of(                                                                            context)                                                                        .size                                                                        .width /                                                                    22,                                                              ),                                                            ),                                                          );                                                        }),                                                  )),                                                  Text(                                                    " : المرحلة",                                                    textDirection:                                                        TextDirection.ltr,                                                    style: Text_Style.getstyle(                                                      fontWeight:                                                          FontWeight.w700,                                                      ColorText:                                                          Colorsapp.mainColor,                                                      fontsize:                                                          MediaQuery.of(context)                                                                  .size                                                                  .width /                                                              20,                                                    ),                                                  ),                                                ],                                              ),                                            ),                                            Padding(                                              padding:                                                  const EdgeInsets.all(8.0),                                              child: Align(                                                  alignment:                                                      Alignment.centerRight,                                                  child: Text(                                                    "${Methods.newsList[newsIndex]["Title"].toString()}",                                                    textDirection:                                                        TextDirection.rtl,                                                    style: Text_Style.getstyle(                                                      fontWeight:                                                          FontWeight.w600,                                                      ColorText:                                                          Colorsapp.redColor,                                                      fontsize:                                                          MediaQuery.of(context)                                                                  .size                                                                  .width /                                                              20,                                                    ),                                                  )),                                            ),                                            if (Methods                                                .newsList[newsIndex]["Images"]                                                .isNotEmpty)                                              Container(                                                  width: MediaQuery.of(context)                                                              .size                                                              .width >                                                          1000                                                      ? MediaQuery.of(context)                                                              .size                                                              .width /                                                          1.8                                                      : MediaQuery.of(context)                                                              .size                                                              .width /                                                          1.2,                                                  height: 300,                                                  child: Directionality(                                                      textDirection:                                                          TextDirection.rtl,                                                      child: ListView.builder(                                                        itemCount: Methods                                                            .newsList[newsIndex]                                                                ["Images"]                                                            .length,                                                        scrollDirection:                                                            Axis.horizontal,                                                        itemBuilder:                                                            (BuildContext                                                                    context,                                                                int index2) {                                                          return Padding(                                                            padding:                                                                const EdgeInsets                                                                    .all(5.0),                                                            child: Container(                                                                decoration: BoxDecoration(                                                                    color: Colors                                                                        .white,                                                                    borderRadius:                                                                        BorderRadius.circular(                                                                            10),                                                                    border: Border.all(                                                                        color: Colorsapp                                                                            .mainColor,                                                                        width:                                                                            2)),                                                                child:                                                                    ClipRRect(                                                                        borderRadius:                                                                            BorderRadius.circular(                                                                                10),                                                                        child: Image                                                                            .network(                                                                          Methods                                                                              .newsList[newsIndex]["Images"][index2]                                                                              .toString(),                                                                          fit: BoxFit                                                                              .contain,                                                                        ))),                                                          );                                                        },                                                      ))),                                            Padding(                                              padding:                                                  const EdgeInsets.all(8.0),                                              child: Align(                                                  alignment:                                                      Alignment.centerRight,                                                  child: Text(                                                    "${Methods.newsList[newsIndex]["body"].toString()}",                                                    textDirection:                                                        TextDirection.rtl,                                                    style: Text_Style.getstyle(                                                      fontWeight:                                                          FontWeight.w500,                                                      ColorText:                                                          Colorsapp.mainColor,                                                      fontsize:                                                          MediaQuery.of(context)                                                                  .size                                                                  .width /                                                              25,                                                    ),                                                  )),                                            ),                                            if (Methods                                                .newsList[newsIndex]["Link"]                                                .isNotEmpty)                                              Container(                                                width: MediaQuery.of(context)                                                    .size                                                    .width,                                                child: Align(                                                  alignment:                                                      Alignment.bottomLeft,                                                  child: TextButton(                                                    child: Text(                                                      "${Methods.newsList[newsIndex]["Link"].toString()}",                                                      style: TextStyle(                                                        color: Colors.blue,                                                        decoration:                                                            TextDecoration                                                                .underline,                                                        fontSize: MediaQuery.of(                                                                    context)                                                                .size                                                                .width /                                                            30,                                                      ),                                                    ),                                                    onPressed: () async {                                                      _url = Uri.parse(                                                          "${Methods.newsList[newsIndex]["Link"].toString()}");                                                      if (!await launchUrl(                                                          _url!)) {                                                        throw 'Could not launch $_url';                                                      }                                                    },                                                  ),                                                ),                                              ),                                            Container(                                              height: MediaQuery.of(context)                                                  .size                                                  .height /                                                  20,                                              padding: EdgeInsets.all(0),                                              decoration: BoxDecoration(                                                  borderRadius: BorderRadius.only(                                      topRight: Radius.circular(20),                                      topLeft:Radius.circular(20),),                                                  color: Colorsapp.White),                                              child: Row(                                                mainAxisAlignment: MainAxisAlignment.spaceBetween,                                                children: [                                                  Container(                                                    child: Row(                                                      children: [                                                           IconButton(                                                              icon: Icon(Icons.thumb_down,color: Methods.listdislikesflag.value[newsIndex]==true?Colors.lightBlue:Colorsapp.TextColor,),                                                              onPressed: () async {                                                       if(Methods.listlikesflag.value[newsIndex] == true){                                                             Methods.listlikesflag.value[newsIndex]=false;                                                             await FirebaseFirestore.instance.collection('News').doc(Methods.newsList[newsIndex].id).update({                                                               'likes': FieldValue.increment(-1)                                                             });                                                             setState(() {                                                             });                                                       }                                                                if(Methods.listfavoritesflag.value[newsIndex] == true){                                                                  Methods.listfavoritesflag.value[newsIndex]=false;                                                                  await FirebaseFirestore.instance.collection('News').doc(Methods.newsList[newsIndex].id).update({                                                                    'favorites': FieldValue.increment(-1)                                                                  });                                                                  setState(() {                                                                  });                                                                }                                                                if(Methods.listdislikesflag.value[newsIndex] == false){                                                                  Methods.listdislikesflag.value[newsIndex]=true;                                                                  await FirebaseFirestore.instance.collection('News').doc(Methods.newsList[newsIndex].id).update({                                                                    'dislikes': FieldValue.increment(1)                                                                  });                                                                  setState(() {                                                                  });                                                                }                                                                else{                                                                  //Methods.newsList[newsIndex]["favoritesflag"] = false;                                                                  Methods.listdislikesflag.value[newsIndex]=false;                                                                  await FirebaseFirestore.instance.collection('News').doc(Methods.newsList[newsIndex].id).update({                                                                    'dislikes': FieldValue.increment(-1)                                                                  });                                                                  setState(() {                                                                  });                                                                }                                                              },                                                            ),                                                        IconButton(                                                              icon: Icon(Icons.thumb_up,color: Methods.listlikesflag.value[newsIndex]==true?Colors.blue:Colorsapp.TextColor,),                                                              onPressed: () async {                                                                if(Methods.listfavoritesflag.value[newsIndex] == true){                                                                  Methods.listfavoritesflag.value[newsIndex]=false;                                                                  await FirebaseFirestore.instance.collection('News').doc(Methods.newsList[newsIndex].id).update({                                                                    'favorites': FieldValue.increment(-1)                                                                  });                                                                  setState(() {                                                                  });                                                                }                                                                if(Methods.listdislikesflag.value[newsIndex] == true){                                                                  Methods.listdislikesflag.value[newsIndex]=false;                                                                  await FirebaseFirestore.instance.collection('News').doc(Methods.newsList[newsIndex].id).update({                                                                    'dislikes': FieldValue.increment(-1)                                                                  });                                                                  setState(() {                                                                  });                                                                }                                                                if(Methods.listlikesflag.value[newsIndex] == false){                                                                  Methods.listlikesflag.value[newsIndex]=true;                                                                  await FirebaseFirestore.instance.collection('News').doc(Methods.newsList[newsIndex].id).update({                                                                    'likes': FieldValue.increment(1)                                                                  });                                                                  setState(() {                                                                  });                                                                }                                                                else{                                                                  //Methods.newsList[newsIndex]["favoritesflag"] = false;                                                                  Methods.listlikesflag.value[newsIndex]=false;                                                                  await FirebaseFirestore.instance.collection('News').doc(Methods.newsList[newsIndex].id).update({                                                                    'likes': FieldValue.increment(-1)                                                                  });                                                                  setState(() {                                                                  });                                                                }                                                              },                                                            ),                                                         IconButton(                                                              icon: Icon(Icons.favorite,color: Methods.listfavoritesflag.value[newsIndex]==true?Colorsapp.redColor:Colorsapp.TextColor,                                                              ),                                                              onPressed: () async {                                                                if(Methods.listdislikesflag.value[newsIndex] == true){                                                                  Methods.listdislikesflag.value[newsIndex]=false;                                                                  await FirebaseFirestore.instance.collection('News').doc(Methods.newsList[newsIndex].id).update({                                                                    'dislikes': FieldValue.increment(-1)                                                                  });                                                                  setState(() {                                                                  });                                                                }                                                             if(Methods.listlikesflag.value[newsIndex] == true){                                        Methods.listlikesflag.value[newsIndex]=false;                                        await FirebaseFirestore.instance.collection('News').doc(Methods.newsList[newsIndex].id).update({                                        'likes': FieldValue.increment(-1)                                        });                                        setState(() {                                        });                                        }                                                                if(Methods.listfavoritesflag.value[newsIndex] == false){                                                                  Methods.listfavoritesflag.value[newsIndex]=true;                                                                  await FirebaseFirestore.instance.collection('News').doc(Methods.newsList[newsIndex].id).update({                                                                    'favorites': FieldValue.increment(1)                                                                  });                                                                  setState(() {                                                                  });                                                                }                                                                else{                                                                  //Methods.newsList[newsIndex]["favoritesflag"] = false;                                                                  Methods.listfavoritesflag.value[newsIndex]=false;                                                                  await FirebaseFirestore.instance.collection('News').doc(Methods.newsList[newsIndex].id).update({                                                                    'favorites': FieldValue.increment(-1)                                                                  });                                                                  setState(() {                                                                  });                                                                }                                                                print("${Methods.newsList[newsIndex].id}");                                                            }                                                            ),                                                      ],                                                    ),                                                  ),                                                  Container(                                                    child: Padding(                                                      padding: const EdgeInsets.only(                                                          right: 8),                                                      child: Align(                                                          alignment:                                                          Alignment.centerRight,                                                          child: Center(                                                            child: Padding(                                                              padding: const EdgeInsets.only(top: 5),                                                              child: Text(                                                                "${Methods.newsList[newsIndex]["author"].toString().substring(0,(Methods.newsList[newsIndex]["author"].toString().length>20)?20:(Methods.newsList[newsIndex]["author"].toString().length))}",                                                                textDirection:                                                                TextDirection.rtl,                                                                style: Text_Style.getstyle(                                                                  fontWeight:                                                                  FontWeight.w600,                                                                  ColorText:                                                                  Colorsapp.redColor,                                                                  fontsize:                                                                  MediaQuery.of(context)                                                                      .size                                                                      .width /                                                                      25,                                                                ),                                                              ),                                                            ),                                                          )),                                                    ),                                                  ),                                                ],                                              ),                                            ),                                          ],                                        ),                                      ),                                    );                                  }),                            )                          : Column(                              children: [                                SvgPicture.asset(                                  "photo/No data-cuate2.svg",                                ),                                Text(                                  "لا يوجد اخبار",                                  style: Text_Style.getstyle(                                    fontWeight: FontWeight.w700,                                    ColorText: Colorsapp.mainColor,                                    fontsize:                                        MediaQuery.of(context).size.width / 15,                                  ),                                ),                              ],                            );                    })                  : Padding(                      padding: EdgeInsets.only(                          top: MediaQuery.of(context).size.height / 2.8),                      child: Center(                        child: LoadingAnimationWidget.flickr(                          size: 100,                          leftDotColor: Colorsapp.mainColor,                          rightDotColor: Colorsapp.SecondColor,                          //color: Colorsapp.mainColor,                        ),                      ),                    );            })          ],        ),      ),    );  }}