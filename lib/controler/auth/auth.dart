import 'dart:convert';import 'dart:async';import 'dart:io';import 'package:cloud_firestore/cloud_firestore.dart';import 'package:get/get.dart';import 'package:get/get_rx/src/rx_types/rx_types.dart';import 'package:notificationsystem_mobile/controler/auth/Account.dart';import 'package:notificationsystem_mobile/controler/method.dart';import 'package:shared_preferences/shared_preferences.dart';import 'package:path_provider/path_provider.dart';class UserPreferences {  static final String _emailKey = 'email';  static final String _passwordKey = 'password';  static final String _stage = 'stage';  static final String _name = 'name';  static final String _isLogIn = 'isLogIn';  static final String News = 'News';  static Future<void> saveCredentials(String email, String password,bool isLogIn1,stage,name) async {    SharedPreferences prefs = await SharedPreferences.getInstance();    await prefs.setString(_emailKey, email);    await prefs.setString(_passwordKey, password);    await prefs.setString(_stage, stage);    await prefs.setString(_name, name);    await prefs.setBool(_isLogIn, isLogIn1);  }  static Future<Account?> getAccount1() async {    SharedPreferences prefs = await SharedPreferences.getInstance();    Account.name=prefs.getString(_name)!;    Account.stage = prefs.getString(_stage)!;    Account.email = prefs.getString(_emailKey)!;    return null;  }  static Future<String?> getEmail() async {    SharedPreferences prefs = await SharedPreferences.getInstance();    return prefs.getString(_emailKey);  }  static Future<String?> getstage() async {    SharedPreferences prefs = await SharedPreferences.getInstance();    Methods.Stagesfieldsave = prefs.getString(_stage)!;    return prefs.getString(_stage);  }  static Future<String?> getPassword() async {    SharedPreferences prefs = await SharedPreferences.getInstance();    return prefs.getString(_passwordKey);  }  static Future<bool?> getstate() async {    SharedPreferences prefs = await SharedPreferences.getInstance();    print("_isLogIn: ${prefs.getBool(_isLogIn)}");    return prefs.getBool(_isLogIn);  }  static Future<void> clearCredentials() async {    SharedPreferences prefs = await SharedPreferences.getInstance();    await prefs.remove(_emailKey);    await prefs.remove(_passwordKey);    await prefs.remove(_isLogIn);    await prefs.remove(_stage);    await prefs.remove(_name);  }}