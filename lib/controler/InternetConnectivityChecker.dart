import 'dart:async';import 'package:connectivity_plus/connectivity_plus.dart';import 'package:get/get_rx/src/rx_types/rx_types.dart';class InternetConnectivityChecker {  static RxBool isConnected1=true.obs;  StreamSubscription<ConnectivityResult>? subscription;  StreamController<bool> _controller = StreamController<bool>();  // Returns a stream that emits a boolean value indicating whether  // there is an active internet connection or not.  Stream<bool> get isConnected async* {    // Get the initial connectivity status    final connectivityResult = await Connectivity().checkConnectivity();    final initialStatus = _mapConnectivityResultToBool(connectivityResult);    print('Initial internet connectivity status: $initialStatus');    yield initialStatus;    // Listen for changes in connectivity status    subscription = Connectivity().onConnectivityChanged.listen((result) {      final isConnected = _mapConnectivityResultToBool(result);      print('Internet connectivity status changed: $isConnected');      isConnected1.value=isConnected;      add(isConnected);    });  }  // Adds a new value to the stream  void add(bool isConnected) {    _controller.add(isConnected);  }  // Disposes of the stream subscription  void dispose() {    subscription?.cancel();    _controller.close();  }  // Maps a ConnectivityResult to a boolean value  bool _mapConnectivityResultToBool(ConnectivityResult result) {    switch (result) {      case ConnectivityResult.mobile:      case ConnectivityResult.wifi:        return true;      default:        return false;    }  }}