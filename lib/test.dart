import 'dart:async';import 'package:flutter/material.dart';import 'package:flutter_email_sender/flutter_email_sender.dart';import 'controler/method.dart';import 'help/Colors.dart';import 'help/text_style.dart';class EmailSender extends StatefulWidget {  const EmailSender({Key? key}) : super(key: key);  @override  _EmailSenderState createState() => _EmailSenderState();}class _EmailSenderState extends State<EmailSender> {  List<String> attachments = [];  bool isHTML = false;  final _recipientController = TextEditingController(    text: 'ibraheem.sadiq.mte19@uoitc.edu.iq',  );  final _subjectController = TextEditingController(text: "${Methods.studentNmae}");  final _bodyController = TextEditingController(    text: 'Mail body.',  );  Future<void> send() async {    final Email email = Email(      body: _bodyController.text,      subject: _subjectController.text,      recipients: [_recipientController.text],      attachmentPaths: attachments,      isHTML: isHTML,    );    String platformResponse;    try {      await FlutterEmailSender.send(email);      platformResponse = 'success';    } catch (error) {      print(error);      platformResponse = "هناك خطأ";    }    if (!mounted) return;    ScaffoldMessenger.of(context).showSnackBar(      SnackBar(        content: Text(          platformResponse,          textDirection: TextDirection.rtl,          style: Text_Style.getstyle(            fontsize: MediaQuery.of(context)                .size                .width /                25,            ColorText: Colorsapp.White,            fontWeight: FontWeight.w400),),      ),    );  }  @override  Widget build(BuildContext context) {    return Scaffold(      appBar: AppBar(        title: Text('Plugin example app'),        actions: <Widget>[          IconButton(            onPressed: send,            icon: Icon(Icons.send),          )        ],      ),      body: Padding(        padding: EdgeInsets.all(8.0),        child: Column(          mainAxisSize: MainAxisSize.max,          // mainAxisAlignment: MainAxisAlignment.spaceBetween,          crossAxisAlignment: CrossAxisAlignment.center,          children: <Widget>[            Padding(              padding: EdgeInsets.all(8.0),              child: TextField(                controller: _recipientController,                decoration: InputDecoration(                  border: OutlineInputBorder(),                  labelText: 'Recipient',                ),              ),            ),            Padding(              padding: EdgeInsets.all(8.0),              child: TextField(                controller: _subjectController,                decoration: InputDecoration(                  border: OutlineInputBorder(),                  labelText: 'Subject',                ),              ),            ),            Expanded(              child: Padding(                padding: EdgeInsets.all(8.0),                child: TextField(                  controller: _bodyController,                  maxLines: null,                  expands: true,                  textAlignVertical: TextAlignVertical.top,                  decoration: InputDecoration(                      labelText: 'Body', border: OutlineInputBorder()),                ),              ),            ),            CheckboxListTile(              contentPadding:              EdgeInsets.symmetric(vertical: 0.0, horizontal: 8.0),              title: Text('HTML'),              onChanged: (bool? value) {                if (value != null) {                  setState(() {                    isHTML = value;                  });                }              },              value: isHTML,            ),          ],        ),      ),    );  }}